# -*- coding: utf-8 -*-
"""Gramos a Kilos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_NJOggI9wweBGVIqHdJ-U8MTz5uZRRfb
"""

import tensorflow as tf
import numpy as np

gramos = np.array([100, 400, 800, 1600, 3200], dtype= float)
kilos = np.array([0.1, 0.4, 0.8, 1.6, 3.2], dtype= float)

#capa =  tf.keras.layers.Dense(units=1, input_shape=[1])
#modelo = tf.keras.Sequential([capa])
oculta1 = tf.keras.layers.Dense(units=3, input_shape=[1])
oculta2 = tf.keras.layers.Dense(units=3)
salida = tf.keras.layers.Dense(units=1)
modelo = tf.keras.Sequential([oculta1, oculta2, salida])

modelo.compile(
    optimizer=tf.keras.optimizers.Adam(0.1),
  loss='mean_squared_error'
)

print("comenzando entrenamiento...")
hilstorial = modelo.fit(gramos, kilos, epochs=1000, verbose=False)
print("Modelo entrenado!!!")

import matplotlib.pyplot as plt
plt.xlabel(" Gramos")
plt.ylabel("Kilos")
plt.plot(hilstorial.history["loss"])

print("Realizar una predicci√≥n")
resultado = modelo.predict([1000])
print("Te sale en " + str(resultado) + " Kilos")

modelo.save('gramos_a_kilos.h5')

!ls

!pip install tensorflowjs

!mkdir conversionpeso

!tensorflowjs_converter --input_format keras gramos_a_kilos.h5 conversionpeso

!ls conversionpeso